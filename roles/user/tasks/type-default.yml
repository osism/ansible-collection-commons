---
- name: Add groups
  become: true
  ansible.builtin.group:
    name: "{{ item.name }}"
    state: present
  when: user_primary_group is not defined or (user_primary_group is defined and user_primary_group | length > 0)
  loop: "{{ user_list }}"
  loop_control:
    label: "{{ item.name }}"

- name: Add users
  become: true
  ansible.builtin.user:
    name: "{{ item.name }}"
    createhome: true
    shell: /usr/bin/bash
    group: "{{ item.primary_group | default(user_primary_group | default(item.name)) }}"
    groups: "{{ item.groups | default(user_groups) }}"
    state: present
  loop: "{{ user_list }}"
  loop_control:
    label: "{{ item.name }}"

- name: Set static SSH authorized key
  become: true
  ansible.posix.authorized_key:
    user: "{{ item.name }}"
    key: "{{ item.key }}"
  loop: "{{ user_list }}"
  loop_control:
    label: "{{ item.name }}"
  when: item.key.startswith('ssh')

- name: Include tasks to handle remote SSH authorized keys
  ansible.builtin.include_tasks: remote-key.yml
  loop: "{{ user_list }}"
  loop_control:
    label: "{{ item.name }}"

- name: Install sudo package
  become: true
  ansible.builtin.package:
    name: sudo
    state: present

- name: Create sudoers files
  become: true
  ansible.builtin.template:
    src: config.j2
    dest: "/etc/sudoers.d/{{ item.name }}"
    owner: root
    group: root
    mode: 0440
  loop: "{{ user_list }}"
  loop_control:
    label: "{{ item.name }}"

- name: Remove sudoers files
  become: true
  ansible.builtin.file:
    dest: "/etc/sudoers.d/{{ item }}"
    state: absent
  loop: "{{ user_delete }}"
  loop_control:
    label: "{{ item }}"

- name: Remove users
  become: true
  ansible.builtin.user:
    name: "{{ item }}"
    remove: true
    state: absent
  loop: "{{ user_delete }}"
  loop_control:
    label: "{{ item }}"

- name: Remove groups
  become: true
  ansible.builtin.group:
    name: "{{ item }}"
    state: absent
  loop: "{{ user_delete }}"
  loop_control:
    label: "{{ item }}"
