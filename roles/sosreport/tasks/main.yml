---
- name: Install required packages
  become: true
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop: "{{ sosreport_required_packages }}"

- name: Remove temporary directory
  become: true
  ansible.builtin.file:
    path: "{{ sosreport_tmpdir }}"
    state: absent

- name: Create required directories
  ansible.builtin.file:
    path: "{{ sosreport_tmpdir }}"
    state: directory
    owner: "{{ operator_user }}"
    group: "{{ operator_group }}"
    mode: 0755

- name: Create local required directories
  become: true
  ansible.builtin.file:
    path: "{{ sosreport_archive_directory }}"
    state: directory
    owner: "{{ operator_user }}"
    group: "{{ operator_group }}"
    mode: 0755
    recurse: true
  delegate_to: localhost

- name: Generate report
  become: true
  ansible.builtin.command: "sosreport --batch --tmp-dir {{ sosreport_tmpdir }} -z gzip --name {{ inventory_hostname_short }} -o {{ sosreport_plugins | join(',') }}"
  changed_when: true

- name: Rename sha256 file
  become: true
  ansible.builtin.shell: "mv -f {{ sosreport_tmpdir }}/*.sha256 {{ sosreport_tmpdir }}/{{ sosreport_archive_filename }}.sha256"
  changed_when: true

- name: Rename archive
  become: true
  ansible.builtin.shell: "mv -f {{ sosreport_tmpdir }}/*.tar.gz {{ sosreport_tmpdir }}/{{ sosreport_archive_filename }}"
  changed_when: true

- name: Change report mode
  become: true
  ansible.builtin.file:
    path: "{{ sosreport_tmpdir }}"
    state: directory
    owner: "{{ operator_user }}"
    group: "{{ operator_group }}"
    mode: 0755
    recurse: true

- name: Fetch sha256 file
  ansible.builtin.fetch:
    src: "{{ sosreport_tmpdir }}/{{ sosreport_archive_filename }}.sha256"
    dest: "{{ sosreport_archive_directory }}/{{ sosreport_archive_filename }}.sha256"
    flat: true
    change: true

- name: Fetch archive
  ansible.builtin.fetch:
    src: "{{ sosreport_tmpdir }}/{{ sosreport_archive_filename }}"
    dest: "{{ sosreport_archive_directory }}/{{ sosreport_archive_filename }}"
    flat: true
    change: true

- name: Create archive directory
  ansible.builtin.file:
    path: "{{ sosreport_archive_directory }}/{{ sosreport_name }}"
    state: directory
    mode: 0600
  delegate_to: localhost
  when: sosreport_unarchive

- name: Unarchive archive
  ansible.builtin.unarchive:
    src: "{{ sosreport_archive_directory }}/{{ sosreport_archive_filename }}"
    dest: "{{ sosreport_archive_directory }}/{{ sosreport_name }}"
    remote_src: true
    extra_opts: --strip-components=1
  delegate_to: localhost
  when: sosreport_unarchive

- name: Remove temporary directory
  become: true
  ansible.builtin.file:
    path: "{{ sosreport_tmpdir }}"
    state: absent
