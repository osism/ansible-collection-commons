---
- name: Get /etc/hosts file
  slurp:
    src: "{{ hosts_file }}"
  register: hosts

- name: Copy initial /etc/hosts file
  become: true
  template:
    src: "hosts-block.j2"
    dest: "{{ hosts_file }}"
    owner: root
    group: root
    mode: 0644
    backup: "{{ hosts_file_backup }}"
  when: "'osism.hosts' not in hosts['content']|b64decode or hosts_file_reset|bool"

- name: Add hosts
  become: true
  blockinfile:
    dest: "{{ hosts_file }}"
    block: |
      {{ hostvars[item]['ansible_' + hostvars[item]['hosts_interface']]['ipv4']['address'] }} {{ item }} {{ item.split('.')[0] }}
    marker: "# {mark} osism.hosts managed block {{ item }}"
  loop: "{{ groups[hosts_group_name]|default([])|sort }}"
  when:
    - not hosts_use_dns_as_single_source_of_truth|bool
    - item not in hosts_ignore
    - hostvars[item] is defined
    - hostvars[item]['hosts_enable']|default(hosts_enable)|bool
    - hostvars[item]['hosts_interface'] is defined
    - hostvars[item]['ansible_' + hostvars[item]['hosts_interface']] is defined

- name: Add additional hosts
  become: true
  blockinfile:
    dest: "{{ hosts_file }}"
    block: |
      {{ item.1 }} {{ item.0 }} {{ item.0.split('.')[0] }}
    marker: "# {mark} osism.hosts managed block {{ item.0 }}"
  loop: "{{ hosts_additional_entries|dictsort }}"
