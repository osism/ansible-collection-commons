---
- name: Install apt-transport-https package
  become: true
  ansible.builtin.apt:
    name: apt-transport-https
    state: present
    lock_timeout: "{{ apt_lock_timeout | default(300) }}"
  when: sysdig_configure_repository | bool

- name: Add repository gpg key with apt-key
  become: true
  ansible.builtin.apt_key:
    url: "{{ sysdig_debian_repository_key }}"
  when:
    - sysdig_configure_repository | bool
    - ansible_distribution_version is version('22.04', '<')

- name: Add repository gpg key
  become: true
  ansible.builtin.get_url:
    url: "{{ sysdig_debian_repository_key }}"
    dest: /etc/apt/trusted.gpg.d/sysdig.asc
    mode: 0644
    owner: root
    group: root
  when:
    - sysdig_configure_repository | bool
    - ansible_distribution_version is version('22.04', '>=')

- name: Add repository
  become: true
  ansible.builtin.apt_repository:
    repo: "{{ sysdig_debian_repository }}"
    state: present
    filename: sysdig
    update_cache: true
    mode: 0600
  when: sysdig_configure_repository | bool

- name: Check if /var/run/reboot-required exist
  ansible.builtin.stat:
    path: /var/run/reboot-required
  register: result

- name: Print message if /var/run/reboot-required exist
  ansible.builtin.debug:
    msg: "Reboot of {{ inventory_hostname }} required to get the latest kernel running"
  when: result.stat.islnk is defined

- name: "Install package {{ sysdig_package_name }}"
  become: true
  ansible.builtin.apt:
    name: "{{ sysdig_package_name }}"
    state: present
    lock_timeout: "{{ apt_lock_timeout | default(300) }}"

- name: "Persist kernel module via modules-load.d"
  become: true
  ansible.builtin.template:
    src: config.j2
    dest: /etc/modules-load.d/sysdig.conf
    owner: root
    group: root
    mode: 0644

- name: "Load kernel module {{ sysdig_kernel_module_name }}"
  become: true
  community.general.modprobe:
    name: "{{ sysdig_kernel_module_name }}"
    state: present
