---
- name: Debian specific tasks
  become: true
  block:
    - name: Install required packages
      ansible.builtin.apt:
        name: apt-transport-https
        state: present

    - name: Add repository gpg key
      ansible.builtin.apt_key:
        url: "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg"

    - name: Add repository
      ansible.builtin.apt_repository:
        repo: "deb https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
        state: present
        filename: docker
        update_cache: true
        mode: 0644

    - name: Remove moby-compose package
      ansible.builtin.apt:
        name: moby-compose
        state: absent
  when: "'Debian' in ansible_os_family"

- name: RedHat specific tasks
  become: true
  block:
    - name: Install required packages
      ansible.builtin.dnf:
        name: "{{ item }}"
        state: present
      loop:
        - yum-utils
        - device-mapper-persistent-data
        - lvm2

    - name: Add repository
      ansible.builtin.yum_repository:
        name: docker-ce
        description: Docker CE Stable - $basearch
        baseurl: "https://download.docker.com/linux/{{ ansible_distribution | lower }}/{{ ansible_distribution_version }}/{{ 'aarch64' if ansible_architecture == 'arm64' else ansible_architecture }}/stable"
        gpgcheck: true
        enabled: true
        gpgkey: https://download.docker.com/linux/centos/gpg

    - name: Remove moby-compose package
      ansible.builtin.dnf:
        name: moby-compose
        state: absent
  when: "'RedHat' in ansible_os_family"

- name: Install docker package (for testing)
  become: true
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop:
    - docker-ce
    - docker-ce-cli

- name: Reload systemd daemon
  become: true
  ansible.builtin.systemd:
    daemon_reload: true

- name: Manage service (for testing)
  become: true
  ansible.builtin.service:
    name: docker
    state: started
    enabled: true

- name: Manage docker socket service (for testing)
  become: true
  ansible.builtin.service:
    name: docker.socket
    state: started
    enabled: true

- name: Create runtime test directory
  ansible.builtin.file:
    path: /tmp/docker_compose_test
    state: directory
    owner: "{{ docker_compose_service_user }}"
    group: "{{ docker_compose_service_group }}"

- name: Create runtime test file
  ansible.builtin.copy:
    content: |
      services:
        hello_world:
          image: hello-world
    dest: /tmp/docker_compose_test/compose.yaml
    owner: "{{ docker_compose_service_user }}"
    group: "{{ docker_compose_service_group }}"
    mode: '0755'
